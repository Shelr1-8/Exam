// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exam.Migrations
{
    [DbContext(typeof(LibraryDBContext))]
    partial class LibraryDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exam.Entities.Avtor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Avtor");

                    b.HasKey("Id");

                    b.ToTable("Avtors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SurName = "Boeing 747"
                        },
                        new
                        {
                            Id = 2,
                            SurName = "Mria"
                        },
                        new
                        {
                            Id = 3,
                            SurName = "AN 225"
                        });
                });

            modelBuilder.Entity("Exam.Entities.Ganr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Ganr");

                    b.HasKey("Id");

                    b.ToTable("Ganrs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AUDI"
                        },
                        new
                        {
                            Id = 3,
                            Name = "LADA"
                        });
                });

            modelBuilder.Entity("Exam.Entities.Knyga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvtorId")
                        .HasColumnType("int");

                    b.Property<int>("CinaDlaProdagy")
                        .HasColumnType("int");

                    b.Property<int>("CountPages")
                        .HasColumnType("int");

                    b.Property<int>("GanrId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Knyga");

                    b.Property<string>("Prodovgenna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sobivartist")
                        .HasColumnType("int");

                    b.Property<int>("VydacnytstvoId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvtorId");

                    b.HasIndex("GanrId");

                    b.HasIndex("VydacnytstvoId");

                    b.ToTable("Knygas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvtorId = 1,
                            CinaDlaProdagy = 100000,
                            CountPages = 1,
                            GanrId = 1,
                            Name = "Chorna dyra",
                            Prodovgenna = "yes",
                            Sobivartist = 1200,
                            VydacnytstvoId = 1,
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            AvtorId = 2,
                            CinaDlaProdagy = 1000000,
                            CountPages = 5,
                            GanrId = 2,
                            Name = "Povorot ne tuda",
                            Prodovgenna = "no",
                            Sobivartist = 12000,
                            VydacnytstvoId = 2,
                            Year = 2022
                        },
                        new
                        {
                            Id = 3,
                            AvtorId = 3,
                            CinaDlaProdagy = 1000000,
                            CountPages = 10,
                            GanrId = 3,
                            Name = "Marianskaa vpadina",
                            Prodovgenna = "yes",
                            Sobivartist = 10200,
                            VydacnytstvoId = 3,
                            Year = 2024
                        });
                });

            modelBuilder.Entity("Exam.Entities.Vydacnytstvo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Vydacnytstvo");

                    b.HasKey("Id");

                    b.ToTable("Vydacnytstvo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AAAA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SSS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "DDDDDDD"
                        });
                });

            modelBuilder.Entity("Exam.Entities.Knyga", b =>
                {
                    b.HasOne("Exam.Entities.Avtor", "Avtor")
                        .WithMany("Knygi")
                        .HasForeignKey("AvtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam.Entities.Ganr", "Ganr")
                        .WithMany("Knygi")
                        .HasForeignKey("GanrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam.Entities.Vydacnytstvo", "Vydacnytstvo")
                        .WithMany("Knygi")
                        .HasForeignKey("VydacnytstvoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avtor");

                    b.Navigation("Ganr");

                    b.Navigation("Vydacnytstvo");
                });

            modelBuilder.Entity("Exam.Entities.Avtor", b =>
                {
                    b.Navigation("Knygi");
                });

            modelBuilder.Entity("Exam.Entities.Ganr", b =>
                {
                    b.Navigation("Knygi");
                });

            modelBuilder.Entity("Exam.Entities.Vydacnytstvo", b =>
                {
                    b.Navigation("Knygi");
                });
#pragma warning restore 612, 618
        }
    }
}
